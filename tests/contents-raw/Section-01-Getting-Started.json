[
  {
    "title": "Custom Start",
    "content": {
      "content1": "I am currently taking online courses and I need your help to create comprehensive notes using Markdown. Please include code snippets if they are present in the class. Sometimes the lessons are lengthy, so I will divide the transcript for longer classes and paste them like this: 'Transcript Part 1: ...', 'Transcript Part 2: ...', and so on. For shorter classes, I will simply paste 'Transcript: ...'. Please ensure the notes are well-organized and informative. If you're ready, I'll send you the transcripts."
    }
  },
  {
    "title": "1-Welcome-To-The-Course",
    "content": {
      "content1": "title:\"1-Welcome-To-The-Course\" transcript:\"Hi, and welcome to this course.My name is Maximilian Schwarzmuller,and I will be your instructor in this coursewhere I will teach you NextJS from the ground upstep-by-step and in great depth.And I will teach you all about NextJS, not just in theory,but instead by building multiple exciting demo projects.By the end of the course, you'll therefore be ableto use NextJS in your own projects,and you'll be able to buildamazing full-stack applications with React.Now, speaking of React,that's the one prerequisite for this course.You should have basic React knowledgebecause NextJS is actually a framework that builds up on topof React, and I'll get back to that in the next lectures.But you should have that React foundationso that you get the most out of the coursebecause this is not a React course, but a NextJS course.That being said though, the very next sectionafter this first section will be a React.jsrefresher section so that you can go throughthat section in case it's been some time since you lastworked with React.But with that, let's not waste any time.Let's instead dive right in.And let's start with the most important question.What exactly is NextJS and why would you needor use it?\""
    }
  },
  {
    "title": "2-What-Is-NextJS-Why-Would-You-Use-It",
    "content": {
      "content1": "title:\"2-What-Is-NextJS-Why-Would-You-Use-It\" transcript:\"So, what is NextJS and why would you use it?Well, the answer is NextJS is a React framework,so it builds up on React.js,and you therefore, of course, might wonder,why do we need it?After all, React.js is already a library itself.Why do we need another frameworkthat builds up on React.js?Well, because NextJS is a full stack React framework,so it simplifies the processof building full stack apps with React.And that's a huge thing,because recently, over the last couple of months and years,there's been a trend to go backto building full stack applicationsinstead of just client-side single page applications.And indeed, the React library itselfadded more and more featuresthat make it a bit easier to run React on the serverand render components on the server specifically.But that's typically not all you needif you want to build a full stack application.Instead, if you wanna builda complete, feature-rich full stack application,you also need help with handling form submissions,fetching data, authenticating users,and a lot of other things.And that's exactly what NextJS gives you.So, it builds up on Reactand then vastly simplifies the processof building full stack applications with React.Therefore, in order to use NextJS,and in order to build applications with NextJS,you need a solid React foundation.You need to know React,because you'll still be building components and so on.But then NextJS allows you to take your React skillsto the next level, so to say,and it allows youto build full stack applications with React.And that's exactly what we'll doover the next couple of hours.\""
    }
  },
  {
    "title": "3-Key-Features-Benefits-Of-NextJS",
    "content": {
      "content1": "title:\"3-Key-Features-Benefits-Of-NextJS\" transcript:\"So NextJS allows youto build full stack applications with React.So to blend frontend and backendand build more complex apps all in one project,and all with one programming language, JavaScript,and one framework or one library,so with React, enhanced by NextJS.And in this course you will seethat this can offer various advantages.For example, fetchingand rendering data can become easier and more efficient.Handling form submissions can become easier and more secure.So there are many advantages related to that.And whilst this is the main big thing,NextJS adds, that it allows youto build such full stack applications,it's not the only benefit you gain when working with NextJS.And another advantage of NextJS is thatwith it you set up your routes with help of the file system.Instead of configuring them in code,as you would typically do it in a vanilla JavaScript app,for example, with React Router, when working with NextJS,you configure them with help of the file system.So by setting up various foldersand files, which are then mapped into routesthat can be visited by users.The advantage of this approach isthat no extra code-based configurationor extra packages are needed.Instead it's built into NextJS.And last but not least,but definitely not to be underestimated, is the factthat NextJS actually renders all the contentthat's visible on the screen, all the pagesand components on the server.And that means that the content that's sent over the wire,the HTML document, in the end already includes all thecontent that should be presented on the screen insteadof being mostly emptyand populated on the client as is the casewith vanilla JavaScript.And the advantage here is that, for example,search engine crawlers see that finished content as well.But I'll get back to that pointin a couple of lectures again.And therefore, using NextJS gives you a coupleof key featuresand benefits that are not to be underestimated.And that's of course the reason why NextJS is that popularand why for building more complex React apps,you should strongly consider using a framework like NextJS.\""
    }
  },
  {
    "title": "4-Creating-a-First-NextJS-App",
    "content": {
      "content1": "title:\"4-Creating-a-First-NextJS-App\" transcript:\"So now that we know that NextJSis pretty awesome and gives us a couple of advantages,it's time to get our hands dirtyand create a new Next project.And for that, you can visit the official website,nextjs.org, and on there you'll find this commandthat can be executed to create new Next projects.Though I will say right away that attached to this lectureand to many other lectures throughout this course,I provide a starting snapshotthat actually uses CodeSandbox,so that you can follow along with this courseand learn NextJS without installing anything on your system,because maybe you're in an environmentwhere you can't install software on your systemor you simply don't want to.Well, in that case, you don't have to.You can simply use that CodeSandbox starting snapshot.Now, if you wanna set up a NextJS projectlocally on your system, that's the command to run.And since that command, just like NextJS itself,will use Node.js under the hood,you should therefore install that on your system.So, download and install Node.js,for example, this LTS version.Now with that installed, you can copy that commandand then run it in your default terminal or command prompt.Just make sure that before running it,you navigate into a folderwhere you wanna create your new Next project.You can then hit Enter,and you'll then be asked a couple of questions,like for example, what the name of this project should be,and here I'll simply pick first-app.Now, with that chosen,you'll then be asked a couple of other questions.Like for example, whether you want to use TypeScript or not.And whilst TypeScript is amazingand I can only recommend Learning TypeScript,I'll not use it for this course, since of course,not all students know TypeScript or want to use TypeScript.Now, I will choose yes for ESLint, but no for Tailwind.Tailwind is an amazing CSS librarythat allows us to style NextJS applications with ease,but when using it,we also have to add a bunch of CSS classes to our JSX code.And I don't wanna waste your time,that's why I'm not using it here in this course,though I will take a look at different styling optionsyou have in NextJS projects a little bit later.Now, you could then go for a different folder structure,but I'll choose No here as well.And then we got an important question,whether you want to use the App Router or not.And this simply refers to two different waysof building NextJS applications,two different approaches you can use.That's why in the official documentation,you are also able to choosebetween these two different approaches.Now, I'll get back to the differences later.In this course, I cover both,but here we'll choose the recommended option,which is to use the App Router.Then you could change this setting,but I'll stick to No here.And with that, finally, the project is being created.Now, once the creation finished, you can navigateinto that newly created NextJS project folderand run npm run dev to start a development serverthat allows you to review your NextJS website.On CodeSandbox, you don't have to do that,there, this server is automatically runningand you should already be seeing the preview.Now, for a new NextJS project,if you visit this addressthat's showing up in the terminal here,you will likely see a page that looks something like this,though on CodeSandbox, you are seeing a different page,because I actually prepareda slightly edited starting project,which we can use as a starting point for this sectionand this overall course.And you'll find this edited starting projectattached to this lecture.\n(graphic crunching)I overwrote the content of the app folder,the public folder,and the content of this eslintrc.json file,and then you should see this page on the screen.And that's now our first NextJS app up and running.\""
    }
  },
  {
    "title": "5-NextJS-vs-Just-React-Analyzing-The-NextJS-Project",
    "content": {
      "content1": "title:\"5-NextJS-vs-Just-React-Analyzing-The-NextJS-Project\" transcript:\"So we have this first starting project here,and what's really important about this project isthat if you inspect the page source in your browser,you'll see a bunch of code in there.But most importantly, if you take a closer look,you'll see the actual page contentsomewhere in that source code.And that's importantbecause that means that the actual contentthat's visible on the screen,so this text here in this case, was part of the HTML codethat was sent back from the server.And that's special because that's not the casein a standard client site React app.There, if you inspect the source code,you will just see basically empty pageand some script imports,but you won't see the actual contentthat's visible on the screen in that source code.And the reason for that is thata standard React app is manipulated on the clientsite in the browser.React.js by default is a client site JavaScript library,which means it runs in the browser and it editsand manipulates the page in the browser.And that's amazingbecause that means that the page can be editedafter it's been loaded.We can update the state of that pageafter it's been loaded without having to fetch a new page.But the disadvantage is that, for example,search engine crawlers don't see the actual page contentif they visit the page for the first time.And that's the difference here with NextJS.Here, we got all the content,not just visually on the screen,but in the actual source code.Because with NextJS,you no longer have a client-side application.Instead you have a full stack applicationwith NextJS projects, you have code that runs on the clientand you have a lot of code that runs on the server.NextJS simply is both.It's not just client-side, not just backend, it's both.And NextJS seamlessly blends clientand server-side so that you can use Reactto build amazing full stack applications.And that's what we'll do now.\""
    }
  },
  {
    "title": "6-Editing-The-First-App",
    "content": {
      "content1": "title:\"6-Editing-The-First-App\" transcript:\"Now we'll of course explore how to write codein NextJS appsand how to build feature rich NextJS applicationsthroughout this course.But to get started already, let's make a first change.And for that you should go to that app folder.Because I wanna add a new second page,and I mentioned before that in NextJS one advantageis that you configure routes simplywith help of the file system.So by adding folders and files.And it's indeed in this app folder herewhere you can add folders and files to add routes.This Is the folder NextJS will scanto detect any routes that should be set up.And I'll explain what these different files here doin depth later in the course of course.But to get started, let's add a new pageby simply adding a new folder,and let's maybe name it awesome.And let's in there, add a new file, page.js.And this must be named page.jsbecause it's this combination of a folder nameand a page.js file that creates a new route in NextJS.And in that file, you can and should then,simply export a standard React component function,because pages in NextJS are just React components,like AwesomePage,where the name of the component does not matter though.And here we could then return a main element,where we have an h1 tag,where we say, NextJS Is Awesome!or something like this.And with that done,you can go back to your NextJS application,and now visit localhost:3000/awesome,and you'll see this page content on the screen then.And that's how easy it is to add new pages in NextJS.And of course, the content of this page also was renderedon the server as you can tellif you inspect the source code,you'll find the content in there.And that's therefor our first slightly edited NextJS project.As mentioned, we'll dive way deeperand explore all the amazing next featuresthroughout this course.\""
    }
  },
  {
    "title": "7-Pages-Router-vs-App-Router-One-Framework-Two-Approaches",
    "content": {
      "content1": "title:\"7-Pages-Router-vs-App-Router-One-Framework-Two-Approaches\" transcript:\"Now, speaking of amazing NextJS features,I wanna come back to that decision we had to makewhen we created a new Next project.There, we had to choose whether we wantto use the App Router or not.And I mentioned that there are simply two different waysof building NextJS apps,and these different approaches exist for historic reasons.There is the so-called Pages Routerand the So-called App Router.Now, no matter which approach you choose,you are building full-stack applicationswhere the pages are rendered on the server,and where you use the file system to set up routes.That's always the case,but the Pages Router is the older way of doing that.This approach has been around for many years,and it's a very stable approach.And indeed, I cover it in depth in this coursebecause it's very stableand because it's used in many projects.Now, as mentioned with this approach, with the Pages Router,you build feature-rich, full-stack appswith React and NextJS.So, that's the case with this approach as well.But we then also have that other approach, the App Router,which is a relatively new way of building NextJS apps.It was introduced with NextJS 13, so not too long ago,and it is now an approach that is marked as stablebut still relatively new,and at least in my experience, also partially still buggy.Nonetheless, it's the most modern wayof building NextJS apps,unlocking many amazing modern new featureslike React Server components or Server Actions,which are features I'll explain in greater detailthroughout this course, of course.Therefore, it's the future of NextJS,and that's why in this course I of course also cover that.I simply cover both approaches.But we'll start with the App Routerafter this React.js refresher sectionbefore we then take a close lookat the Pages Router thereafter,so that by the end of the courseyou know about both approachesand you are ready to work on any NextJS project,no matter which approach that project is using.\""
    }
  },
  {
    "title": "8-How-To-Get-The-Most-Out-Of-This-Course",
    "content": {
      "content1": "title:\"8-How-To-Get-The-Most-Out-Of-This-Course\" transcript:\"Now I wanna make surethat you get the most out of this course,and that, of course, starts at watching the videos.It's a video on demand course,so obviously the videos matter.You should watch them,but you should watch them at your pace.Use those video player controls to speed me up if I'm goingto slow for your taste or slow me down if I'm going to fast.Also, feel free to pause and rewind if needed.It's a on-demand course,and it's totally normal that you wanna repeat certain videosor concepts that somethings maybe not clear immediately,or that you forgot about a certain concept.So definitely take advantage of the factthat you can watch any video as often as you want,and therefore, in general, you should take your timeand make sure that you really go throughthis course at your paceso that you really get the most out of this course.All that being said, though,you will learn the most if you don't just watch the videos,but if you instead also practice what you learned.And therefore, I can only encourage youthat you pause the videos frequentlyand that you simply try out the next steps on your ownor that you revisit course projectsafter a couple of days or weeks,that you try rebuilding themwithout watching the video at the same time.And of course, also build your own demo projects.Build a simplified Amazon clone,something like this because that will allow youto practice what you learned,and that's ultimately how you will get the mostout of a course.Now, of course, when following alongand when writing your own code,it's possible that you get stuck and that you need help.And therefore, attached to this lecture,you find a link to a GitHub repositorywhere you find various code snapshotsfor all the course sections in this courseand some other attachments as well that allow youto compare your code to mine in case you are getting stuckand in case you are getting some strange errors.You can take a look at my code thereand then find out where your code differsand where your error might be coming from.In addition, this course comes with a Q&A sectionwhere you can, of course, ask questions.But you should not just ask questionsinstead you should also try to answer questionsbecause you'll learn much more if you are forcedto think about a problem and come up with a solution.And if your solution is wrong, that's no problem.You'll get corrected and you'll learn again.But definitely try to help each other.In addition, also, feel free to join my free Discord Server,where you will find many like-minded developersso that you can learn and grow together.\""
    }
  },
  {
    "title": "9-Learning-Community-Course-Resources DOC",
    "content": {
      "content1": "title:\"9-Learning-Community-Course-Resources DOC\" transcript:\"Learning Community & Course ResourcesGreat to have you on board as a student!In case you're getting stuck, you should compare your code to mine - you find it here:NextJS Essentials: https://github.com/mschwarzmueller/nextjs-complete-guide-course-resourcesRest of the Course: https://github.com/mschwarzmueller/nextjs-course-codeThis course also comes with free access to our “Academind Community” on Discord: https://academind.com/community/---There, you can find like-minded people, discuss issues, help each other, share progress, successes and ideas and simply have a good time!I believe that you learn the most if you don’t learn alone but find learning partners and other people with similar interests. Our community is a great place for this - it’s the perfect complimentary resource for this course.Joining it is of course free and 100% optional! :-)We'd love to welcome you on board of the community!\""
    }
  },
  {
    "title": "Custom End",
    "content": {
      "content1": "Thank you this is end of this section"
    }
  }
]